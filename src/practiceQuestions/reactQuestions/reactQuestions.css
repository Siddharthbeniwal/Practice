.react-questions {
  h1 {
    color: darkgreen;
  }

  button {
    cursor: pointer;
  }
}

.full-screen {
  width: 100vw; /* 100% of the viewport width */
  height: 100vh; /* 100% of the viewport height */
  margin: 0;
  padding: 0;
  position: absolute;
  top: 0;
  left: 0;
  background-color: darkslategrey;
  color: white;
}

/* ----------------------------------------------------------------------------------------------------------------------------------------------------------- */ */

/* Q14. ModalPopup CSS starts*/

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  background-color: rgba(0, 0, 0, 0.626);
  display: flex;
  align-items: center;
  justify-content: center;
}

.my-modal {
  background-color: white;
  height: 200px;
  width: 300px;
  padding: 10px;
  position: relative; /* Necessary for absolute positioning of .modal-close */
  z-index: 2;
  border-radius: 8px;
}

.modal-header {
  font-weight: bold;
}

.close {
  cursor: pointer;
  position: absolute; /* Ensures it's placed relative to .my-modal */
  right: 10px;
}


/* 
why here position relative Necessary for absolute positioning of .modal-close?

In CSS, when we apply 'position: absolute' to an element, it will position itself relative to its closest positioned ancestor
(i.e., the nearest ancestor that has a position value other than 'static', which is the default).

*/

/* Q14. ModalPopup CSS ends*/

/* ----------------------------------------------------------------------------------------------------------------------------------------------------------- */ */

/* Q.4 (B) DisplayDataWithNumberedPagination CSS starts */

.App {
  font-family: sans-serif;
  text-align: center;
}

.product-container {
  display: flex;
  flex-wrap: wrap;
}

.product-card {
  border: 2px solid black;
  margin: 8px;
  height: 190px;
  width: 200px;
}

.pages-container {
  display: flex;
  justify-content: center;
}

.pages {
  cursor: pointer;
  border: 1px solid black;
  padding: 2px;
  width: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pages:hover {
  background-color: rgba(0, 128, 0, 0.667);
}

.pages-active {
  cursor: pointer;
  border: 1px solid black;
  padding: 2px;
  width: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: green;
}

/* Q.4 (B) DisplayDataWithNumberedPagination CSS ends */

/* ----------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ----------------------------------------------------------------------------------------------------------------------------------------------------------- */

/* Q17. ProgressBar starts*/

.progress-box-container {
  border: solid black 2px;
  height: 25px;
  overflow: hidden;
}

.progress-box {
  background-color: green;
  height: 25px;
  text-align: right;
}

/* Q17. ProgressBar ends*/

/* ----------------------------------------------------------------------------------------------------------------------------------------------------------- */

/* Q18. DisplayDataInTable starts*/

.DisplayDataInTable {
  .main-table {
    border: solid #000000 2px;
    border-collapse: collapse;
  }
  
  .table-row td {
    border: solid black 2px;
    padding: 0;
    margin: 0;
    padding: 0.5rem;
  }
   
}
/* Q18. DisplayDataInTable ends*/

/* ----------------------------------------------------------------------------------------------------------------------------------------------------------- */
